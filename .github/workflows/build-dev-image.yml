name: Development Image

on:
  workflow_call:
    inputs:
      dockerfile:
        description: "Dockerfile that specifies the image"
        default: Dockerfile
        type: string
        required: false
      crystal_version:
        description: "Crystal compiler version to build the image against"
        default: 1.4.1
        required: false
        type: string
      target_image:
        description: "An optional target for repositories that specify multiple services"
        default: ""
        type: string
        required: false
    secrets:
      GHCR_PAT:
        description: Token to push to Github Container Registry
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
    -
      uses: actions/checkout@v3
    -
      name: Extract names
      id: name
      run: |
        echo "::set-output name=image::${GITHUB_REPOSITORY,,}"
        # shellcheck disable=2001
        echo "::set-output name=tag::$(sed 's/[^[:alnum:]\.\_\-]/-/g' <<<"${GITHUB_REF#refs/heads/}")"

        # Remove the organisation prefix
        echo "::set-output name=build-target::${TARGET#*/}"
      env:
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_REF: ${{ github.ref }}
        TARGET: ${{ inputs.target_image != '' &&  inputs.target_image }}
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    # -
    #   name: Set up docker cache
    #   uses: actions/cache@v3
    #   with:
    #     path: /tmp/.buildx-cache
    #     key: ${{ inputs.crystal_version }}-${{ github.sha }}
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GHCR_PAT }}
    -
      name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        file: ${{ inputs.dockerfile }}
        tags: ghcr.io/${{ inputs.target_image != '' &&  inputs.target_image || steps.name.outputs.image }}:${{ steps.name.outputs.tag }}
        build-args: |
          CRYSTAL_VERSION=${{ inputs.crystal_version }}
          TARGET=${{ steps.name.outputs.build-target }}
        # cache-from: type=local,src=/tmp/.buildx-cache
        # cache-to: type=local,dest=/tmp/.buildx-cache
        labels: |
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}/tree/${{ github.ref }}
          org.opencontainers.image.url=https://github.com/${{ github.repository }}
          org.opencontainers.image.vendor=Place Technology Limited
