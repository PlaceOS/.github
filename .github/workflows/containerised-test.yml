name: Containerised Crystal Spec
on:
  workflow_call:
    secrets:
      CR_PAT:
        required: false
    inputs:
      cache_shards:
        description: 'Whether or not to cache shards'
        type: boolean
        default: true
      test_mt:
        description: 'Test Multithreading'
        type: boolean
        default: true
      first_commit:
        description: 'Commit to force creation of TODOs'
        type: string
        default: '0000000000000000000000000000000000000000'
      todo_issues:
        description: 'Whether or not to convert found TODOs to issues'
        type: boolean
        default: false

env:
  CRYSTAL_VERSION: 1.3.2

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run docker-compose test environment
        run: ./test --coverage --order random
        timeout-minutes: 25
        env:
          CRYSTAL_VERSION: ${{ env.CRYSTAL_VERSION }}
      - name: Upload coverage report
        if: ${{ always() }}
        uses: codecov/codecov-action@v2
        with:
          directory: coverage
          fail_ci_if_error: true

  todo-issues:
    if: ${{ inputs.todo_issues }}
    name: TODOs ‚Üí GitHub Issues
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: alstr/todo-to-issue-action@v4.6.5
        with:
          AUTO_ASSIGN: true # Assign issue to whoever wrote the todo
          BEFORE: ${{ inputs.first_commit }}

  test:
    name: "${{ !matrix.stable && 'üöß ' || '' }}crystal: ${{ matrix.crystal }}, MT: ${{ matrix.MT && '‚òë' || '‚òê' }}, canary: ${{ matrix.canary && '‚òë' || '‚òê' }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        crystal:
          - 1.4.1
        MT: [false]
        canary: [false]
        stable: [true]
        include:
          - crystal: 1.4.1
            canary: false
            MT: true
            stable: false
          - crystal: nightly
            canary: false
            stable: false
            MT: false
          - crystal: nightly
            canary: false
            stable: false
            MT: true
          - crystal: 1.4.1
            canary: true
            MT: true
            stable: false
          - crystal: nightly
            canary: true
            stable: false
            MT: false
          - crystal: nightly
            canary: true
            stable: false
            MT: true
    continue-on-error: ${{ !matrix.stable }}
    steps:
      - name: Install crystal
        uses: crystal-lang/install-crystal@v1.6.0
        with:
          crystal: ${{ matrix.crystal }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/cache@v3
        if: ${{ inputs.cache_shards == 'true' }}
        id: cache-shards
        with:
          path: |
            lib
            bin
          key: ${{ hashFiles('shard.lock') }}
      - name: ${{ matrix.canary && 'Update' || 'Install' }} shards
        shell: bash
        if: ${{ matrix.canary || (inputs.cache_shards == 'true' && steps.cache-shards.outputs.cache-hit != 'true') }}
        run: |
          shards ${{ matrix.canary && 'update' || 'install' }}
          if [[ "${{ inputs.cache_shards }}"  == 'false' ]]; then
            rm -r lib bin
          fi
      - name: shard.lock diff
        if: ${{ matrix.canary }}
        id: diff
        uses: tj-actions/changed-files@v22.2
        with:
          files: shard.lock
      - name: Render shard.lock diff
        if: ${{ matrix.canary && steps.diff.outputs.any_changed }}
        run: git diff shard.lock
      - name: Run docker-compose test environment
        if: ${{ (!matrix.canary || (matrix.canary && steps.diff.outputs.any_changed == 'true')) && (inputs.test_mt || (!inputs.test_mt && !matrix.MT ))}}
        timeout-minutes: 15
        run: |
          # Login to GHCR if access token in scope
          if [[ -n "${CR_PAT}" ]]; then
            echo "${CR_PAT}" | docker login ghcr.io -u placeos-robot --password-stdin
          fi

          # Run tests!
          ./test ${{ matrix.MT && '-Dpreview_mt' || '' }} --order random
        env:
          CRYSTAL_VERSION: ${{ matrix.crystal }}
          CR_PAT: ${{ secrets.CR_PAT }}
