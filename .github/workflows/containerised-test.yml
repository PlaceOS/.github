name: Containerised Crystal Spec
on:
  workflow_call:
    secrets:
      CR_PAT:
        description: 'PAT for a container registry'
        required: false
    inputs:
      test_mt:
        description: 'Test Multithreading'
        type: boolean
        default: true
      first_commit:
        description: 'Commit to force creation of TODOs'
        type: string
        default: '0000000000000000000000000000000000000000'
      todo_issues:
        description: 'Whether or not to convert found TODOs to issues'
        type: boolean
        default: false

jobs:
  todo-issues:
    if: ${{ inputs.todo_issues }}
    name: TODOs ‚Üí GitHub Issues
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: alstr/todo-to-issue-action@v4.10
        with:
          AUTO_ASSIGN: true # Assign issue to whoever wrote the todo
          BEFORE: ${{ inputs.first_commit }}

  test:
    name: "${{ !matrix.crystal.stable && 'üöß ' || '' }}crystal: ${{ matrix.crystal.tag }}, MT: ${{ matrix.MT && '‚òë' || '‚òê' }}, canary: ${{ matrix.canary && '‚òë' || '‚òê' }}"
    runs-on: ubuntu-latest
    env:
      SPEC_ARGUMENTS: '--order random'
    strategy:
      fail-fast: false
      matrix:
        crystal:
          - tag: latest
            stable: true
          - tag: unstable
            stable: false
        MT: [false]
        canary: [false]
    continue-on-error: ${{ !matrix.crystal.stable }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run docker-compose test environment
        if: ${{ (!matrix.canary || (matrix.canary && steps.diff.outputs.any_changed == 'true')) && (inputs.test_mt || (!inputs.test_mt && !matrix.MT ))}}
        timeout-minutes: 15
        run: |
          # Login to GHCR if access token in scope
          if [[ -n "${CR_PAT}" ]]; then
            echo "${CR_PAT}" | docker login ghcr.io -u placeos-robot --password-stdin
          fi

          # Run tests!
          ./test ${{ matrix.MT && '-Dpreview_mt' || '' }} ${SPEC_ARGUMENTS}
        env:
          CRYSTAL_VERSION: ${{ matrix.crystal.tag }}
          CR_PAT: ${{ secrets.CR_PAT }}
